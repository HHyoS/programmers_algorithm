#include <string>
#include <vector>
#include <map>
#include <queue>

using namespace std;
int size = 0;
int nn = 0;
bool ins_bo(int x, int y, map<pair<int,int>,int>& gi, map<pair<int,int>,int>& bo){
    if(x < nn && y <= nn ){
        if(gi[{x,y-1}]==1 ||  gi[{x+1,y-1}] == 1 || (bo[{x-1,y}]==1 && bo[{x+1,y}] == 1)){
            bo[{x,y}]=1;
            return true;
        }
        else
            return false;
    }
    else
        return false;
}
bool ins_gidoong(int x, int y, map<pair<int,int>,int>& gi, map<pair<int,int>,int>& bo){
    if(x <= nn && y < nn){
        if(y == 0 || gi[{x,y-1}] ==1 || bo[{x-1,y}] == 1 || bo[{x,y}] ==1){
            gi[{x,y}]=1;
            return true;
        }
        else
            return false;
    }
    else
        return false;
}
void del(vector<int> command, map<pair<int,int>,int>& gi, map<pair<int,int>,int>& bo){
    int x = command[0];
    int y = command[1];
    if(command[2] == 0)
        gi[{x,y}] = 0;
    else if(command[2] == 1)
        bo[{x,y}] = 0;
    for(auto a : gi){
        if(a.second == 1){
            int xx = a.first.first;
            int yy = a.first.second;
            if(ins_gidoong(xx, yy, gi,bo))
                continue;
            else{
                if(command[2] == 0){
                    gi[{x,y}] = 1;
                    return;}
                else if(command[2] == 1){
                    bo[{x,y}] = 1;
                    return;
                }
            }
        }
    }
    for(auto a : bo){
        if(a.second==1){
            int xx = a.first.first;
            int yy = a.first.second;
            if(ins_bo(xx, yy , gi,bo))
                continue;
            else{
                if(command[2] == 0){
                    gi[{x,y}] = 1;
                    return;}
                else if(command[2] == 1){
                    bo[{x,y}] = 1;
                    return;
                }
            }
        }
    }
}
vector<vector<int>> solution(int n, vector<vector<int>> build_frame) {
    vector<vector<int>> answer;
    map<pair<int,int>,int> gidoong;
    map<pair<int,int>,int> bo;
    queue<pair<int,int>> que;
    int start = 0;
    nn = n;
    for(int a =0; a < build_frame.size(); ++a){
        printf("x = %d, y= %d\n", build_frame[a][0],build_frame[a][1]);
        if(build_frame[a][2] == 0 && build_frame[a][3] == 1)
            ins_gidoong(build_frame[a][0],build_frame[a][1], gidoong, bo);
        else if(build_frame[a][2] == 1 && build_frame[a][3] == 1)
            ins_bo(build_frame[a][0],build_frame[a][1], gidoong, bo);
        else if(build_frame[a][3] == 0)
            del(build_frame[a], gidoong, bo);
    }
    printf("\n\n");
    for(auto a : gidoong){
        if(a.second == 1)
            printf("x = %d, y = %d \n",a.first.first, a.first.second);
    }
    return answer;
}
